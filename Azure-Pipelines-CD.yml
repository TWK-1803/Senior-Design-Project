# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'dfda036f-fa82-45fa-9d00-1b1a7da2a6e3'

  # Web app name
  webAppName: 'UECPWebApp'

  # Environment name
  environmentName: 'UECPWebApp'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
    
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'UECP'
      displayName: 'npm install for NodeJS'
    
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'UECP/client'
      displayName: 'npm install for VueJS'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'UECP/client'
        customCommand: 'run build'
      displayName: 'npm run build for VueJS'
      env: 
        VUE_APP_IMAGE_CONTAINER: $(VUE_APP_IMAGE_CONTAINER)
        VUE_APP_PROFILES_IMAGE_CONTAINER: $(VUE_APP_PROFILES_IMAGE_CONTAINER)
      
    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'UECP'
        customCommand: 'run test-CI'
      displayName: 'npm run test-CI'
      env:
        DB_SRV: $(DB_SRV)
        AZURE_STORAGE_ACCOUNT_NAME: $(AZURE_STORAGE_ACCOUNT_NAME)
        AZURE_STORAGE_ACCOUNT_ACCESS_KEY: $(AZURE_STORAGE_ACCOUNT_ACCESS_KEY)
        SECRET: $(SECRET)
        DEV_MODE: $(DEV_MODE)
        SERVICE_URL: $(SERVICE_URL)
        VUE_APP_IMAGE_CONTAINER: $(VUE_APP_IMAGE_CONTAINER)
        SHIP_ENGINE_API: $(SHIP_ENGINE_API)

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/UECP/server/test/junit.xml'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/UECP'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: UECPWebApp'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|18-lts'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'